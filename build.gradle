buildscript {
    repositories {
        mavenCentral()
    }
}

plugins {
    id 'org.springframework.boot' version '3.3.5'
    id "com.gorylenko.gradle-git-properties" version "2.4.2"
    id "io.freefair.lombok" version "8.12"
    id 'org.jetbrains.kotlin.jvm' version '2.1.0'
    id 'org.jetbrains.kotlin.plugin.spring' version '2.1.10'
}

springBoot {
    buildInfo {
        properties {
            artifact = 'formplayer'
            version = new Date().format('yyyy-MM-dd HH:mm:ss')
            group = 'org.commcare'
            name = 'Formplayer'
        }
    }
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'jacoco'

jacoco {
    toolVersion = "0.8.10"
}

jar {
    enabled = false
}

allprojects{
    apply plugin: "java"
}

repositories {
    mavenCentral()
    maven { url "https://jitpack.io" }
}

ext {
    isTravisBuild = System.getenv().get("TRAVIS") == 'true'
    sentryVersion = '8.0.0'
    shedlockVersion = '6.2.0'
}

sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_17

idea {
    module {
        excludeDirs += [file("libs/commcare/src/jmh")]
    }
}

configurations {
    developmentOnly
    runtimeClasspath {
        extendsFrom developmentOnly
    }
}

dependencies {
    //Versions managed by Spring Boot Dependency Management
    implementation group: 'com.fasterxml.jackson.core', name: 'jackson-databind'
    implementation group: 'com.fasterxml.jackson.core', name: 'jackson-core'
    implementation group: 'commons-codec', name: 'commons-codec'
    implementation group: 'org.apache.commons', name: 'commons-lang3'
    implementation group: 'org.flywaydb', name: 'flyway-database-postgresql'
    implementation group: 'org.postgresql', name: 'postgresql'
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-web'
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-actuator'
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter'
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-jdbc'
    implementation group: 'org.springframework.boot', name: 'spring-boot-autoconfigure'
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-data-jpa'
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-cache'
    implementation('org.apache.logging.log4j:log4j-to-slf4j') {
        version {
            strictly '2.15.0'
        }
    }
    implementation('org.apache.logging.log4j:log4j-api') {
        version {
            strictly '2.15.0'
        }
    }
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation group: 'org.xerial', name: 'sqlite-jdbc'
    implementation group: 'redis.clients', name: 'jedis'
    implementation group: 'io.micrometer', name: 'micrometer-registry-statsd'
    implementation group: 'org.springframework', name: 'spring-web'
    implementation group: 'org.springframework', name: 'spring-jdbc'
    implementation group: 'org.springframework.data', name: 'spring-data-jpa'
    implementation group: 'org.springframework.data', name: 'spring-data-redis'
    implementation group: 'org.springframework.data', name: 'spring-data-commons'
    implementation group: 'org.springframework.integration', name: 'spring-integration-redis'
    implementation group: 'org.jetbrains.kotlin', name: 'kotlin-reflect'
    implementation group: 'org.jetbrains.kotlin', name: 'kotlin-stdlib-jdk8'

    //Unmanaged Dependencies
    implementation group: 'com.datadoghq', name: 'dd-trace-api', version: '1.31.2'
    implementation group: 'com.datadoghq', name: 'java-dogstatsd-client', version: '4.4.3'
    implementation group: 'io.sentry', name: 'sentry-spring-boot-starter-jakarta', version: "${sentryVersion}"
    implementation group: 'io.sentry', name: 'sentry-logback', version: "${sentryVersion}"
    implementation group: 'commons-io', name: 'commons-io', version: '2.18.0'
    implementation group: 'org.json', name: 'json', version: '20231013'
    implementation group: 'org.simpleframework', name: 'simple-xml', version: '2.7.1'
    implementation group: 'net.javacrumbs.shedlock', name: 'shedlock-spring', version: "${shedlockVersion}"
    implementation group: 'net.javacrumbs.shedlock', name: 'shedlock-provider-jdbc-template', version: "${shedlockVersion}"
    implementation group: 'com.google.guava', name: 'guava', version: '32.1.3-jre'
    implementation group: 'com.github.ben-manes.caffeine', name: 'jcache', version: '3.2.0'


    implementation fileTree(dir: 'libs', include: '*.jar')
    implementation project(path: ':commcare', configuration: 'ccapi')
    implementation project(path: ':commcare', configuration: 'translate')

    testImplementation project(path: ':commcare', configuration: 'ccapi')

    // #### DEV / TEST DEPENDENCIES
    //Versions managed by Spring Dependency Management
    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }
    testImplementation 'org.springframework.security:spring-security-test'
    testImplementation group: 'com.jayway.jsonpath', name: 'json-path'
    testImplementation group: 'com.jayway.jsonpath', name: 'json-path-assert'
    testImplementation group: 'org.mockito', name: 'mockito-junit-jupiter'
    testImplementation group: 'org.mockito', name: 'mockito-core'
    testImplementation "org.mockito.kotlin:mockito-kotlin:5.4.0"
    testRuntimeOnly group: 'org.skyscreamer', name: 'jsonassert'
    developmentOnly group: 'org.springframework.boot', name: 'spring-boot-devtools'
}

test {
    useJUnitPlatform()
    testLogging {
        exceptionFormat 'full'
        events "passed", "skipped", "failed"
    }
    if (isTravisBuild) {
        System.out.print('Is Travis test run')
        maxParallelForks = 1
        maxHeapSize = '768m'
        forkEvery = 100   // helps when tests leak memory
        afterSuite {
            System.out.print('.')
            System.out.flush()
        }
    }
    finalizedBy jacocoTestReport // report is always generated after tests run
}

task CreateSnapshotDbs(type: Test) {
    useJUnitPlatform()
    environment('org.commcare.formplayer.test.snapshot.mode', 'write')
    filter {
        //specific test method
        includeTestsMatching "org.commcare.formplayer.utils.GenerateSnapshotDatabases"
    }
}

task copyTestResources(type: Copy) {
    from "${projectDir}/src/test/resources"
    into "${buildDir}/classes/test"
}
test.dependsOn copyTestResources

task copyScripts(type: Copy) {
    from "${projectDir}/scripts/archive_dbs.sh"
    into "${buildDir}/scripts"
}

assemble.dependsOn copyScripts

jacocoTestReport {
    dependsOn test
    reports {
        xml.required = true
        html.required = true
    }
}

tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile) {
    kotlinOptions {
        jvmTarget = "17"
    }
}
